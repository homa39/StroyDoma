require('dotenv').config();
const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const path = require('path');
const cron = require('node-cron');


// –ò–º–ø–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ backend-—á–∞—Å—Ç–∏
const {
  getHouses,
  addHouse,
  updateHouse,
  deleteHouse,
  syncGoogleSheets
} = require('./src/services/adminApi');

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(cors());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));
app.use(express.static(path.join(__dirname, 'public'))); // –æ–±—Å–ª—É–∂–∏–≤–∞–µ–º HTML, CSS, JS

// ==== API endpoints ====
// –î–æ–º–∞
app.get('/api/houses', getHouses);
app.post('/api/houses', addHouse);
app.put('/api/houses/:id', updateHouse);
app.delete('/api/houses/:id', deleteHouse);

// –ù–æ–≤–æ—Å—Ç–∏
const {
  getNews,
  addNews,
  updateNews,
  deleteNews,
  syncNewsFromSheets
} = require('./src/services/newsApi');

app.get('/api/news', getNews);
app.post('/api/news', addNews);
app.put('/api/news/:id', updateNews);
app.delete('/api/news/:id', deleteNews);

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Google Sheets (—Ä–∞–∑ –≤ —á–∞—Å)
cron.schedule('0 * * * *', async () => {
  try {
    await syncGoogleSheets();
    console.log('‚úÖ Google Sheets —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (cron)');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', err);
  }
});

// ‚è± –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
(async () => {
  try {
    await syncGoogleSheets();
    await syncNewsFromSheets();
    
    console.log('‚úÖ Google Sheets —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏
    app.get('/news/:id', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'news.html'));
    });

    app.listen(PORT, () => {
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
    });
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', err);
  }
})();
