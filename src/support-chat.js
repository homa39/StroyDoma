class SupportChat {
    constructor() {
        console.log('SupportChat constructor called');
        this.init();
    }

    init() {
        console.log('Initializing SupportChat');
        this.addChatToPage();
        this.setupEventListeners();
        this.addWelcomeMessage();
        this.addQuickQuestions();
    }

    addChatToPage() {
        console.log('Adding chat HTML to page');
        const chatHTML = `
            <div class="support-chat">
                <button class="chat-button">
                    <span class="chat-icon">üí¨</span>
                    –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞
                </button>
                <div class="chat-window" style="display: none;">
                    <div class="chat-header">
                        <h3>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</h3>
                        <button class="close-button">&times;</button>
                    </div>
                    <div class="messages-container"></div>
                    <div class="quick-questions"></div>
                    <form class="message-form">
                        <input type="text" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..." required>
                        <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
                    </form>
                </div>
            </div>
        `;
        document.body.insertAdjacentHTML('beforeend', chatHTML);
    }

    setupEventListeners() {
        console.log('Setting up event listeners');
        const chatButton = document.querySelector('.chat-button');
        const chatWindow = document.querySelector('.chat-window');
        const closeButton = document.querySelector('.close-button');
        const messageForm = document.querySelector('.message-form');
        const messageInput = document.querySelector('.message-form input');
        const messagesContainer = document.querySelector('.messages-container');

        chatButton.addEventListener('click', () => this.toggleChat());
        closeButton.addEventListener('click', () => this.toggleChat());
        messageForm.addEventListener('submit', (e) => this.handleSubmit(e));
    }

    toggleChat() {
        const chatWindow = document.querySelector('.chat-window');
        const isVisible = chatWindow.style.display !== 'none';
        chatWindow.style.display = isVisible ? 'none' : 'flex';
    }

    handleSubmit(e) {
        e.preventDefault();
        const input = document.querySelector('.message-form input');
        const message = input.value.trim();
        
        if (message) {
            this.addMessage(message, 'user');
            this.processUserMessage(message);
            input.value = '';
        }
    }

    addMessage(text, sender) {
        const messagesContainer = document.querySelector('.messages-container');
        const messageDiv = document.createElement('div');
        messageDiv.className = `message ${sender}`;
        messageDiv.textContent = text;
        messagesContainer.appendChild(messageDiv);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }

    addWelcomeMessage() {
        this.addMessage('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?', 'support');
    }

    addQuickQuestions() {
        const quickQuestions = [
            '–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å –¥–æ–º?',
            '–ö–∞–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è?',
            '–°—Ä–æ–∫–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞',
            '–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã',
            '–ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ'
        ];

        const quickQuestionsContainer = document.querySelector('.quick-questions');
        quickQuestions.forEach(question => {
            const button = document.createElement('button');
            button.className = 'quick-question';
            button.textContent = question;
            button.addEventListener('click', () => {
                this.addMessage(question, 'user');
                this.processUserMessage(question);
            });
            quickQuestionsContainer.appendChild(button);
        });
    }

    processUserMessage(message) {
        const responses = {
            '–∫–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å –¥–æ–º': '–î–ª—è –∑–∞–∫–∞–∑–∞ –¥–æ–º–∞ –≤–∞–º –Ω—É–∂–Ω–æ:\n1. –í—ã–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ\n2. –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –∑–∞–∫–∞–∑–∞\n3. –û–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º\n4. –ü–æ–¥–ø–∏—Å–∞—Ç—å –¥–æ–≥–æ–≤–æ—Ä\n5. –í–Ω–µ—Å—Ç–∏ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É',
            '–∫–∞–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è': '–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\n- –ö–ª–µ–µ–Ω—ã–π –±—Ä—É—Å\n- –ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±—Ä—É—Å\n- –ö–∞—Ä–∫–∞—Å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\n- –°–ò–ü-–ø–∞–Ω–µ–ª–∏\n–í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏–º–µ—é—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∫–∞—á–µ—Å—Ç–≤–∞.',
            '—Å—Ä–æ–∫–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞': '–°—Ä–æ–∫–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∑–∞–≤–∏—Å—è—Ç –æ—Ç –ø—Ä–æ–µ–∫—Ç–∞:\n- –ö–∞—Ä–∫–∞—Å–Ω—ã–π –¥–æ–º: 2-3 –º–µ—Å—è—Ü–∞\n- –î–æ–º –∏–∑ –±—Ä—É—Å–∞: 3-4 –º–µ—Å—è—Ü–∞\n- –ö–∏—Ä–ø–∏—á–Ω—ã–π –¥–æ–º: 4-6 –º–µ—Å—è—Ü–µ–≤\n–¢–æ—á–Ω—ã–µ —Å—Ä–æ–∫–∏ –æ–±—Å—É–∂–¥–∞—é—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ.',
            '—Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã': '–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:\n- –ù–∞–ª–∏—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç\n- –ë–µ–∑–Ω–∞–ª–∏—á–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥\n- –†–∞—Å—Å—Ä–æ—á–∫–∞\n- –ò–ø–æ—Ç–µ–∫–∞\n- –ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–π –∫–∞–ø–∏—Ç–∞–ª',
            '–≥–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ': '–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º:\n- 5 –ª–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏–∏ –Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤\n- 2 –≥–æ–¥–∞ –≥–∞—Ä–∞–Ω—Ç–∏–∏ –Ω–∞ –æ—Ç–¥–µ–ª–∫—É\n- 1 –≥–æ–¥ –≥–∞—Ä–∞–Ω—Ç–∏–∏ –Ω–∞ –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã\n–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å.'
        };

        // –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
        const lowerMessage = message.toLowerCase();
        let response = '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.';

        for (const [key, value] of Object.entries(responses)) {
            if (lowerMessage.includes(key)) {
                response = value;
                break;
            }
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ –æ—Ç–≤–µ—Ç–æ–º –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ "–ø–µ—á–∞—Ç–∞–Ω–∏—è"
        setTimeout(() => {
            this.addMessage(response, 'support');
        }, 1000);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', () => {
    console.log('DOM loaded, initializing chat');
    new SupportChat();
}); 