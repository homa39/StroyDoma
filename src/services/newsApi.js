const axios = require('axios');
require('dotenv').config();

const SHEET_ID = process.env.GOOGLE_SHEETS_ID;
const API_KEY = process.env.GOOGLE_SHEETS_API_KEY;
const SHEET_NAME = '–ù–æ–≤–æ—Å—Ç–∏';

let cachedNews = [];
let lastSyncTime = null;
const CACHE_DURATION = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function processImageUrl(url) {
  if (!url) return 'images/news-placeholder.jpg';
  
  // –ï—Å–ª–∏ URL –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å http –∏–ª–∏ https, –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
  if (url.startsWith('http://') || url.startsWith('https://')) {
    return url;
  }
  
  // –ï—Å–ª–∏ —ç—Ç–æ ID –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ Google Drive
  if (url.includes('drive.google.com')) {
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º URL –¥–ª—è –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
    const fileId = url.match(/[-\w]{25,}/);
    if (fileId) {
      return `https://drive.google.com/uc?export=view&id=${fileId[0]}`;
    }
  }
  
  // –ï—Å–ª–∏ —ç—Ç–æ –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å, –¥–æ–±–∞–≤–ª—è–µ–º —Å–ª–µ—à –≤ –Ω–∞—á–∞–ª–æ
  if (!url.startsWith('/')) {
    return '/' + url;
  }
  
  return url;
}

async function delay(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function syncNewsFromSheets(retryCount = 0) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    if (lastSyncTime && (Date.now() - lastSyncTime) < CACHE_DURATION) {
      console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏');
      return cachedNews;
    }

    if (!SHEET_ID || !API_KEY || !SHEET_NAME) {
      console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Google Sheets');
      return [];
    }

    const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${SHEET_NAME}?key=${API_KEY}`;
    
    try {
      const response = await axios.get(url);
      const rows = response.data.values;

      if (!rows || rows.length <= 1) {
        console.log('üü° –ù–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏');
        cachedNews = [];
        return cachedNews;
      }

      const headers = rows[0];
      const getIndex = (name) => headers.indexOf(name);

      cachedNews = rows.slice(1).map((row, i) => ({
        id: i + 1,
        title: row[getIndex("–ó–∞–≥–æ–ª–æ–≤–æ–∫")] || '',
        content: row[getIndex("–¢–µ–∫—Å—Ç")] || '',
        imageUrl: processImageUrl(row[getIndex("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")] || '')
      })).filter(n => n.title && n.content);
      
      lastSyncTime = Date.now();
      console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: ${cachedNews.length}`);
      return cachedNews;
    } catch (error) {
      if (error.response) {
        if (error.response.status === 429 && retryCount < 3) {
          console.log(`üîÑ –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ ${retryCount + 1}/3...`);
          await delay(2000 * (retryCount + 1));
          return syncNewsFromSheets(retryCount + 1);
        }
        console.error(`‚ùå –û—à–∏–±–∫–∞ Google Sheets API: ${error.response.status} - ${error.response.statusText}`);
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Google Sheets:', error.message);
      }
      return cachedNews;
    }
  } catch (err) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', err.message);
    return cachedNews;
  }
}

function getNews(req, res) {
  res.json(cachedNews);
}

function addNews(req, res) {
  res.status(403).json({ error: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Google Sheets.' });
}

function updateNews(req, res) {
  res.status(403).json({ error: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Google Sheets.' });
}

function deleteNews(req, res) {
  res.status(403).json({ error: '–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Google Sheets.' });
}

module.exports = {
  getNews,
  addNews,
  updateNews,
  deleteNews,
  syncNewsFromSheets
};
