
const axios = require('axios');

const SHEET_ID = '156uCCvbVBXqIJNnmgCTA5s0B-jnYaR9VOmHGFteeywc';
const API_KEY = 'AIzaSyClNz_9vW5XH1rzjOHNGebVy5d_XQ6y48o';
const SHEET_NAME = '–ù–æ–≤–æ—Å—Ç–∏';

let cachedNews = [];

async function syncNewsFromSheets() {
  try {
    const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${SHEET_NAME}?key=${API_KEY}`;
    const response = await axios.get(url);
    const rows = response.data.values;

    if (!rows || rows.length <= 1) {
      console.log('üü° –ù–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏');
      cachedNews = [];
      return;
    }

    const headers = rows[0];
    const getIndex = (name) => headers.indexOf(name);

    cachedNews = rows.slice(1).map((row, i) => ({
      id: i + 1,
      title: row[getIndex("–ó–∞–≥–æ–ª–æ–≤–æ–∫")] || '',
      content: row[getIndex("–¢–µ–∫—Å—Ç")] || '',
      created_at: row[getIndex("–î–∞—Ç–∞")] || ''
    })).filter(n => n.title && n.content);
    
    console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: ${cachedNews.length}`);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ Google Sheets:", err.message);
    cachedNews = [];
  }
}

function getNews(req, res) {
  res.json(cachedNews);
}

function addNews(req, res) {
  res.status(403).json({ error: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Google Sheets.' });
}

function updateNews(req, res) {
  res.status(403).json({ error: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Google Sheets.' });
}

function deleteNews(req, res) {
  res.status(403).json({ error: '–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Google Sheets.' });
}

module.exports = {
  getNews,
  addNews,
  updateNews,
  deleteNews,
  syncNewsFromSheets
};
