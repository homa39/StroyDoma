const axios = require('axios');

const SHEET_ID = '156uCCvbVBXqIJNnmgCTA5s0B-jnYaR9VOmHGFteeywc';
const API_KEY = 'AIzaSyClNz_9vW5XH1rzjOHNGebVy5d_XQ6y48o';
const SHEET_NAME = '–õ–∏—Å—Ç1';

let cachedHouses = [];

async function syncGoogleSheets() {
  try {
    const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${SHEET_NAME}?key=${API_KEY}`;
    const response = await axios.get(url);
    const rows = response.data.values;

    if (!rows || rows.length <= 1) {
      console.log('üü° –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ');
      cachedHouses = [];
      return cachedHouses;
    }

    const headers = rows[0];
    const getIndex = (name) => headers.indexOf(name);

    cachedHouses = rows.slice(1).map((row, i) => {
      return {
        id: i + 1,
        name: row[getIndex("–ù–∞–∑–≤–∞–Ω–∏–µ")] || "",
        imageUrl: row[getIndex("–§–æ—Ç–æ")] || "",
        description: row[getIndex("–û–ø–∏—Å–∞–Ω–∏–µ")] || "",
        area: parseInt(row[getIndex("–ü–ª–æ—â–∞–¥—å")]) || 0,
        floors: parseInt(row[getIndex("–≠—Ç–∞–∂–µ–π")]) || 1,
        materials: row[getIndex("–ú–∞—Ç–µ—Ä–∏–∞–ª—ã")] || "",
        price: parseInt(row[getIndex("–¶–µ–Ω–∞")]) || 0
      };
    }).filter(h => h.name && h.imageUrl); // —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—É—Å—Ç—ã—Ö

    console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –¥–æ–º–æ–≤ –∏–∑ Google Sheets: ${cachedHouses.length}`);
    return cachedHouses;
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ Google Sheets:', err.message);
    return [];
  }
}

function getHouses(req, res) {
  const { material, floors, minArea } = req.query;
  let filteredHouses = [...cachedHouses];

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –º–∞—Ç–µ—Ä–∏–∞–ª—É
  if (material) {
    filteredHouses = filteredHouses.filter(house => 
      house.materials.toLowerCase().includes(material.toLowerCase())
    );
  }

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —ç—Ç–∞–∂–µ–π
  if (floors) {
    filteredHouses = filteredHouses.filter(house => 
      house.floors === parseInt(floors)
    );
  }

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –ø–ª–æ—â–∞–¥–∏
  if (minArea) {
    filteredHouses = filteredHouses.filter(house => 
      house.area >= parseInt(minArea)
    );
  }

  res.json(filteredHouses);
}

function addHouse(req, res) {
  return res.status(403).json({ error: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Google Sheets.' });
}

function updateHouse(req, res) {
  return res.status(403).json({ error: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Google Sheets.' });
}

function deleteHouse(req, res) {
  return res.status(403).json({ error: '–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Google Sheets.' });
}

module.exports = {
  getHouses,
  addHouse,
  updateHouse,
  deleteHouse,
  syncGoogleSheets
};
